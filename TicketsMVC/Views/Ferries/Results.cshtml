@using System.Globalization
@using TicketsMVC.Models
@model ResultsModel

<script type="text/javascript">
    $(window).load(function () {
        $(".cssload-loader").fadeOut("slow");
    });
</script>

<div class="model hidden">@Html.Raw(Json.Encode(Model))</div>

@using (Html.BeginForm("Passengers", "Ferries", FormMethod.Get, new { enctype = "multipart/form-data", @class = "form-horizontal container", role = "form" }))
{

    <div class="row">
        @for (var i = 0; i < @Model.MultDepList.Count; i++)
        {
            <label class="col-md-12" style="font-weight:bolder;font-size:24px;color:#1E7FB1">
                Δρομολόγια από <span style="color:#009FE2;font-size:15px">@Model.MultDepList[i].FromPort.Split(',')[0].Split(']')[1]</span> προς <span style="color:#009FE2;font-size:15px">@Model.MultDepList[i].ToPort.Split(',')[0].Split(']')[1]</span>  <span style="font-size:larger">-</span>  (@Model.Triptype)
            </label>
            if (@Model.Triptype.ToString() == "WithReturn")
            {
                <label class="col-md-12">
                    Αναχώρηση: <span style="color:#003580" class="showdatefrom0">@Model.MultDepList[i].DateFrom.ToString("D", new CultureInfo("el-GR"))</span> <span style="font-size:larger">-</span> Επιστροφή: <span style="color:#003580"  class="showdateto0">@Model.MultDepList[i].DateTo.ToString("D", new CultureInfo("el-GR"))</span>
                </label>
            }
            else if(@Model.Triptype.ToString() == "Multiple")
            {
                <label class="col-md-12">
                    Αναχώρηση: <span style="color:#003580" class="showdatefrom@(i)">@Model.MultDepList[i].DateFrom.ToString("D", new CultureInfo("el-GR"))</span>
                </label>
            }
            else
            {
                <label class="col-md-12">
                    Αναχώρηση: <span style="color:#005DA2" class="showdatefrom0">@Model.MultDepList[i].DateFrom.ToString("D", new CultureInfo("el-GR"))</span>
                </label>
            }
        }
    </div>

    <div class="row">
        <ul class="list-inline col-md-12">
            <li>
                <img src="../Content/resultsimages/typeavailable.png" style="float: left">
                <label style="padding-left: 5px; position: relative; top: 6px">Διαθέσιμες θέσεις</label>
            </li>
            <li>
                <img src="../Content/resultsimages/typelimited.png" style="float: left">
                <label style="padding-left: 5px; position: relative; top: 6px">Περιορισμένες θέσεις</label>
            </li>
            <li>
                <img src="../Content/resultsimages/typeno.png" style="float: left">
                <label style="padding-left: 5px; position: relative; top: 6px">Δεν υπάρχουν θέσεις</label>
            </li>
            <li>
                <img src="../Content/Resultsimages/typenore.png" style="float: left">
                <label style="padding-left: 5px; position: relative; top: 6px">Δεν υπάρχει δυνατότητα κράτησης</label>
            </li>
        </ul>
    </div>


    <div class="row" style="border-bottom:8px solid #5B9E5B">
        <img class="col-md-1" src="../Content/Searchimages/ship.png" style="float:left;margin-bottom:5px" />
        <label class="col-md-11" style="font-weight:bolder;font-size:20px;color:#1E7FB1;padding-left:0px;margin-top:10px;">
            Διαθέσιμα Δρομολόγια
            @for (var i = 0; i < @Model.MultDepList.Count; i++)
            {
                if (i > 0 && @Model.MultDepList[i].FromPort.ToString() == @Model.MultDepList[i - 1].ToPort.ToString())
                {
                    <span style="font-size:larger"> -</span> <span style="color:orange">@Model.MultDepList[i].ToPort.Split(',')[0].Split(']')[1]</span>
                }
                else
                {
                    <span style="color:orange">@Model.MultDepList[i].FromPort.Split(',')[0].Split(']')[1]</span> <span style="font-size:larger">-</span> <span style="color:orange">@Model.MultDepList[i].ToPort.Split(',')[0].Split(']')[1]</span>
                }
            }
            @if (@Model.Triptype.ToString() == "WithReturn")
            {
                <span style="font-size:larger">-</span> <span style="color:orange">@Model.MultDepList[0].FromPort.Split(',')[0].Split(']')[1]</span>
            }
        </label>
    </div>

    <div class="displayroutes">
        @if (@Model.Triptype.ToString() == "Simple" || @Model.Triptype.ToString() == "WithReturn")
        {
            <div class="col-md-12 row" style="border-bottom: 2px solid #1E7FB1; left: 20px">
                <img src="../Content/Searchimages/portfrom.png" style="float: left; margin-top: 5px; margin-right: 5px" />
                <label><span style="font-weight:bolder;color:#1E7FB1;font-size:small">Αναχώρηση</span><br /><span class="showdatefrom0">@Model.MultDepList[0].DateFrom.ToString("D", new CultureInfo("el-GR"))</span> <span style="font-size:larger">-</span> από <span style="color:#009FE2;font-size:15px">@Model.MultDepList[0].FromPort.Split(',')[0].Split(']')[1]</span> προς <span style="color:#009FE2;font-size:15px">@Model.MultDepList[0].ToPort.Split(',')[0].Split(']')[1]</span></label>
            </div>

            <div class="dateslider col-md-12 row" id="sliderdatefrom0">
                <div>
                    <div class="ns_slideContent">
                        <p class="prevarrow btn-floating waves-effect waves-light left">
                            <img src="../Content/NerveSlider/icons/prev-dark.png"/>
                        </p>
                        @for (int j = -3; j < 4; j++)
                        {
                            if (j == 0)
                            {
                                <p value=@j class="reserved day left">@Model.MultDepList[0].DateFrom.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br/> @Model.MultDepList[0].DateFrom.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                <p class="dayborder left"></p>
                            }
                            else
                            {
                                if (@Model.MultDepList[0].DateFrom.AddDays(j).CompareTo(@Model.MultDepList[0].DateTo) > 0 && @Model.Triptype.ToString() == "WithReturn")
                                {
                                    <p value=@j class="day disabled left">@Model.MultDepList[0].DateFrom.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br /> @Model.MultDepList[0].DateFrom.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                }
                                else {
                                    <p value=@j class="day left">@Model.MultDepList[0].DateFrom.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br/> @Model.MultDepList[0].DateFrom.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                }
                                if (j < 3)
                                {
                                    <p class="dayborder left"></p>
                                }
                            }
                        }
                        <p class="nextarrow btn-floating waves-effect waves-light left">
                            <img src="../Content/NerveSlider/icons/next-dark.png"/>
                        </p>
                    </div>
                </div>
            </div>

            <div class="displayroutesinfo col-md-12">
                <table class="table table-condensed"></table>
                @Html.HiddenFor(x => x.MultRouteList[0].Boatcompany, new { @style = "display: none;", tabindex = -1 })
                @Html.HiddenFor(x => x.MultRouteList[0].Boatname, new { @style = "display: none;", tabindex = -1 })
                @Html.HiddenFor(x => x.MultRouteList[0].Vesselid, new { @style = "display: none;", tabindex = -1 })
                @Html.HiddenFor(x => x.MultRouteList[0].Deptime, new { @style = "display: none;", tabindex = -1 })
                @Html.HiddenFor(x => x.MultRouteList[0].Arrtime, new { @style = "display: none;", tabindex = -1 })
                @Html.HiddenFor(x => x.MultRouteList[0].Price, new { @style = "display: none;", tabindex = -1 })
            </div>
            if (@Model.Triptype.ToString() == "WithReturn")
            {
                <div class="col-md-12 row" style="border-bottom:2px solid #1E7FB1;left:20px">
                    <img src="../Content/Searchimages/portto.png" style="float:left;margin-top:5px;margin-right:5px" />
                    <label><span style="font-weight:bolder;color:#1E7FB1;font-size:small">Επιστροφή</span><br /><span class="showdateto0">@Model.MultDepList[0].DateTo.ToString("D", new CultureInfo("el-GR"))</span> <span style="font-size:larger">-</span> από <span style="color:#009FE2;font-size:15px">@Model.MultDepList[0].ToPort.Split(',')[0].Split(']')[1]</span> προς <span style="color:#009FE2;font-size:15px">@Model.MultDepList[0].FromPort.Split(',')[0].Split(']')[1]</span></label>
                </div>

                <div class="dateslider row" id="sliderdateto0">
                    <div>
                        <div class="ns_slideContent">
                            <p class="prevarrow btn-floating waves-effect waves-light left">
                                <img src="../Content/NerveSlider/icons/prev-dark.png" />
                            </p>
                            @for (int j = -3; j < 4; j++)
                            {
                                if (j == 0)
                                {
                                    <p value=@j class="reserved day left">@Model.MultDepList[0].DateTo.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br /> @Model.MultDepList[0].DateTo.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                    <p class="dayborder left"></p>
                                }
                                else
                                {
                                    if (@Model.MultDepList[0].DateTo.AddDays(j).CompareTo(@Model.MultDepList[0].DateFrom) < 0)
                                    {
                                        <p value=@j class="day disabled left">@Model.MultDepList[0].DateTo.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br /> @Model.MultDepList[0].DateTo.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                    }
                                    else {
                                        <p value=@j class="day left">@Model.MultDepList[0].DateTo.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br /> @Model.MultDepList[0].DateTo.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                    }
                                    if (j < 3)
                                    {
                                        <p class="dayborder left"></p>
                                    }
                                }
                            }
                            <p class="nextarrow btn-floating waves-effect waves-light left">
                                <img src="../Content/NerveSlider/icons/next-dark.png" />
                            </p>
                        </div>
                    </div>
                </div>

                <div class="displayroutesinfo col-md-12">
                    <table class="table table-condensed"></table>
                    @Html.HiddenFor(x => x.MultRouteList[1].Boatcompany, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[1].Boatname, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[1].Vesselid, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[1].Deptime, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[1].Arrtime, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[1].Price, new { @style = "display: none;", tabindex = -1 })
                </div>
            }
        }
        else
        {
            for (var i = 0; i < @Model.MultDepList.Count; i++)
            {
                int counter = i + 1;
                    <div class="col-md-11 row" style="border-bottom:2px solid #1E7FB1;left:20px">
                        <img src="../Content/Searchimages/portfrom.png" style="float:left;margin-top:5px;margin-right:5px" />
                        <label><span style="font-weight:bolder;color:#1E7FB1;font-size:small">@(counter)ο σκέλος</span><br /><span class="showdatefrom@(i)">@Model.MultDepList[i].DateFrom.ToString("D", new CultureInfo("el-GR"))</span> <span style="font-size:larger">-</span> από <span style="color:#009FE2;font-size:15px">@Model.MultDepList[i].FromPort.Split(',')[0].Split(']')[1]</span> προς <span style="color:#009FE2;font-size:15px">@Model.MultDepList[i].ToPort.Split(',')[0].Split(']')[1]</span></label>
                    </div>

                    <div class="dateslider row" id="sliderdatefrom@(i)">
                        <div>
                            <div class="ns_slideContent">
                                <p class="prevarrow btn-floating waves-effect waves-light left">
                                    <img src="../Content/NerveSlider/icons/prev-dark.png" />
                                </p>
                                @for (int j = -3; j < 4; j++)
                                {
                                    if (j == 0)
                                    {
                                        <p value=@j class="reserved day left">@Model.MultDepList[i].DateFrom.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br /> @Model.MultDepList[i].DateFrom.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                        <p class="dayborder left"></p>
                                    }
                                    else
                                    {
                                        if ((i < @Model.MultDepList.Count-1 && (@Model.MultDepList[i].DateFrom.AddDays(j).CompareTo(@Model.MultDepList[(i + 1)].DateFrom) > 0) || (i > 0 && @Model.MultDepList[i].DateFrom.AddDays(j).CompareTo(@Model.MultDepList[(i - 1)].DateFrom) < 0)))
                                        {
                                            <p value=@j class="day disabled left">@Model.MultDepList[i].DateFrom.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br /> @Model.MultDepList[i].DateFrom.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                        }
                                        else
                                        {
                                            <p value=@j class="day left">@Model.MultDepList[i].DateFrom.AddDays(j).ToString("dddd", new CultureInfo("el-GR"))<br /> @Model.MultDepList[i].DateFrom.AddDays(j).ToString("dd MMMM", new CultureInfo("el-GR"))</p>
                                        }
                                        if (j < 3)
                                        {
                                            <p class="dayborder left"></p>
                                        }
                                    }
                                }
                                <p class="nextarrow btn-floating waves-effect waves-light left">
                                    <img src="../Content/NerveSlider/icons/next-dark.png" />
                                </p>
                            </div>
                        </div>
                    </div>

                    <div class="displayroutesinfo col-md-12">
                    <table class="table table-condensed"></table>
                    @Html.HiddenFor(x => x.MultRouteList[i].Boatcompany, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[i].Boatname, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[i].Vesselid, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[i].Deptime, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[i].Arrtime, new { @style = "display: none;", tabindex = -1 })
                    @Html.HiddenFor(x => x.MultRouteList[i].Price, new { @style = "display: none;", tabindex = -1 })
                </div>
            }
        }
    </div>

    //SUBMIT BUTTON
    <div class="row">
        <div class="col-md-12">
                <button value="Send" class="btn waves-effect waves-light right" type="submit" style="background-color:#FF6600">
                    Συνέχεια&nbsp;&nbsp;&nbsp;&nbsp;<img src="../Content/Searchimages/boatsearch.png" />
            </button>
        </div>
    </div>
}

@using (Html.BeginForm("Passengers", "Ferries", FormMethod.Get, new { enctype = "multipart/form-data", @class = "form-horizontal container", role = "form" }))
{
    <div class="row" style="border-bottom:5px solid #5B9E5B">
        <img class="col-md-1" src="../Content/Searchimages/ship.png" style="float:left;margin-bottom:5px" />
        <label class="col-md-11" style="font-weight:bolder;font-size:15px;color:#1E7FB1;padding-left:0px;margin-top:10px;">
            Εναλλακτικό δρομολόγιο
            @for (var i = 0; i < @Model.MultDepList.Count; i++)
            {
                if (i > 0 && @Model.MultDepList[i].FromPort.ToString() == @Model.MultDepList[i - 1].ToPort.ToString())
                {
                    <span style="font-size:larger"> -</span> <span style="color:orange">@Model.MultDepList[i].ToPort.Split(',')[0].Split(']')[1]</span>
                }
                else
                {
                    <span style="color:orange">@Model.MultDepList[i].FromPort.Split(',')[0].Split(']')[1]</span> <span style="font-size:larger">-</span> <span style="color:orange">@Model.MultDepList[i].ToPort.Split(',')[0].Split(']')[1]</span>
                }
            }
            @if (@Model.Triptype.ToString() == "WithReturn")
            {
                <span style="font-size:larger">-</span> <span style="color:orange">@Model.MultDepList[0].FromPort.Split(',')[0].Split(']')[1]</span>
            }
        </label>
    </div>
    //SUBMIT BUTTON
    <div class="row">
        <div class="col-md-12">
            <button value="Send" class="btn waves-effect waves-light right" type="submit" style="background-color:#FF6600">
                Συνέχεια&nbsp;&nbsp;&nbsp;&nbsp;<img src="../Content/Searchimages/boatsearch.png" />
            </button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/Scripts/NerveSlider/jquery.nerveSlider.min.js")
    @Styles.Render("~/Content/NerveSlider/nerveSlider.min.css")
    @Scripts.Render("~/Scripts/results.js")
    @Styles.Render("~/Content/results.css")
    @Scripts.Render("~/Scripts/moment/moment.js")
    @Scripts.Render("~/Scripts/moment/moment-with-locales.js")
}